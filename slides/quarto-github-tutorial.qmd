---
title: "Mini curso: *Quarto* y *GitHub Pages*"
subtitle: |
  <table style="width:100%;">
    <tr>
      <td style="text-align: left;">
        III Jornadas de Ingeniería Estadística 2024 </br> 
        11 y 12 de Noviembre 2024, Auditorio DMCC </br> 
        Universidad de Santiago de Chile
      </td>
      <td style="text-align: right; vertical-align: top;">
        <img src="images/JIE_logo.png" alt="Logo JIE" style="height: 100px;">
      </td>
    </tr>
  </table>
lang: es
format: 
  clean-revealjs:
    self-contained: true
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
author:
  - name: Francisco Plaza Vega
    email: francisco.plaza.v@usach.cl
    affiliations: USACH
bibliography: refs.bib
---

# Introducción {background-color="#212f4b"}

## ¿Qué es la Investigación Reproducible?

::: {.callout-note appearance="simple" icon=false}
Es la práctica de conducir estudios científicos o basados en datos de tal manera que **permita a otros replicar o reproducir los resultados usando los mismos datos, códigos y metodologías**.
:::

![](images/reproducibility.jpg){width=70% fig-align="center"}


## Etapas de una Investigación Reproducible

![](images/research-cycle.png){width=70% fig-align="center"}

## Ciencia Abierta

![](images/evolution-open-research.png){width=60% fig-align="center"}

## Espectro de Reproducibilidad

![](images/Reproducible.png){width=60% fig-align="center"}


# Qué necesitaremos? {background-color="#212f4b"}

## Repositorio

:::{.callout-tip title="Enlaces importantes"}
- Sitio web del Mini Curso: [https://franplaza.github.io/Quarto-Github/](https://franplaza.github.io/Quarto-Github/)
- Repositorio en GitHub: [https://github.com/FranPlaza/Quarto-Github](https://github.com/FranPlaza/Quarto-Github)
:::

# Sofware necesarios

## R project

![](images/R_logo.svg.png){width=40% fig-align="center"}

[https://cran.dcc.uchile.cl/](https://cran.dcc.uchile.cl/)

## RSudio IDE

![](images/RStudio-Logo-Flat.png){width=60% fig-align="center"}

[https://posit.co/download/rstudio-desktop/](https://posit.co/download/rstudio-desktop/)

> Existen otras alternativas más *génericas* como [Visual Studio Code](https://code.visualstudio.com/), un editor de código para múltiples lenguajes. Sin embargo, al no ser un software especializado en R, requiere utilizar extensiones para lograr las funcionalidad que otorga RStudio.

## Quarto

![](images/quarto.png){width=50% fig-align="center"}

[https://quarto.org/docs/get-started/](https://quarto.org/docs/get-started/)

## Git & Github

![](images/git_github.png){width=45% fig-align="center"}

- Cuenta en [GitHub](https://github.com/)

- [Github Desktop](https://desktop.github.com/)


# Quarto {background-color="#212f4b"}

## Rmarkdown & Quarto

![](images/rmarkdown_quarto.png){width="50%" fig-align="center"}

::: box3
El paquete `rmarkdown` provee un marco de escritura para investigaciones cuentitativas, que combina códigos, resultados y texto. Los documento R Markdown son **completamente reproducibles** y permiten generar archivos en distintos formatos: PDF, Word, Presentaciones y más. `Quarto` es la nueva generación de esta herramienta para incluir distintos lenguajes.
:::

## Algunos ejemplos

-   [Galería de ejemplos](https://quarto.org/docs/gallery/)

## Quarto

![](images/quarto2.png){width="70%" fig-align="center"}

Los archivos `Quarto` fueron diseñados para ser usados de tres maneras:

1.  Para comunicar a los tomadores de decisiones, quienes quieren centrarse en las conclusiones, no en el código detrás del análisis.

2.  Para colaborar con otros investigadores, quienes están interesados en las conclusiones y el cómo se llego a ellas (i.e. el código)

3.  Como un ambiente para hacer análisis, como un *notebook* donde se puede capturar el trabajo realizado junto a notas de este.

## Primeros pasos

1.  Entrar a [Quarto.org](https://quarto.org/docs/get-started/)
2.  Descargar `Quarto` para tu sistema operativo
3.  Ingresar a `RStudio` y crear documento `.qmd`

## Flujo documento Quarto

![](images/rstudio-qmd-how-it-works.png){width="50%" fig-align="center"}

-   `qmd`: archivo de origen
-   `knitr`: Herramienta que interpreta y ejecuta códigos y lo traduce en texto **markdown**
-   `md`: texto escrito en lenguaje **markdown**
-   `pandoc`: Herramienta que convierte archivos `.md` enb distintos formatos

## Anatomía de un documento Quarto

1.  Encabezado en formato `YAML`
2.  Texto en formato `Quarto`
3.  Bloques de código (`R`, `Python`, `Julia`, `Observable`)


## YAML

> YAML es un formato de *serialización* de datos que puede ser leído fácilmente. Su uso es amplio, desde Acciones en GitHub hasta Quarto

Un ejemplo de YAML que difine un **ambiente computacional** podría ser:

```
# Define the operating system as Linux
os: linux

# Use the xenial distribution of Linux
dist: xenial

# Use the programming language Python
language: python

# Use version of Python 3.2
python: 3.2

```

::: box3
YAML nos será de particular interés para la creación de documentos y presentaciones reproducibles, utilizando quarto.
:::


## Herramientas

El contenido del documento puede estar escrito utilizando diferentes formatos, entre ellos:

-   `Quarto`
-   `HTML`
-   `LaTeX`
-   `CSS`

## Creación de documento básico

1.  Abrir `RStudio`
2.  File \> New File \> Quarto Document
3.  Definir características del documento


# Markdown

![](images/Markdown_logo.png){width="10%" fig-align="center"}


## Formato de Texto

+-----------------------------------------+-----------------------------------------+
| Sintáxis Markdown                       | Salida                                  |
+=========================================+=========================================+
| ``` markdown                            | *italics*, **bold**, ***bold italics*** |
| *italics*, **bold**, ***bold italics*** |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | superscript^2^ / subscript~2~           |
| superscript^2^ / subscript~2~           |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | ~~strikethrough~~                       |
| ~~strikethrough~~                       |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+
| ``` markdown                            | `verbatim code`                         |
| `verbatim code`                         |                                         |
| ```                                     |                                         |
+-----------------------------------------+-----------------------------------------+

## Encabezados {#headings}

+-------------------+-----------------------------------+
| Sintáxis Markdown | Salida                            |
+===================+===================================+
| ``` markdown      | # Header 1 {.heading-output}      |
| # Header 1        |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | ## Header 2 {.heading-output}     |
| ## Header 2       |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | ### Header 3 {.heading-output}    |
| ### Header 3      |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | #### Header 4 {.heading-output}   |
| #### Header 4     |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | ##### Header 5 {.heading-output}  |
| ##### Header 5    |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+
| ``` markdown      | ###### Header 6 {.heading-output} |
| ###### Header 6   |                                   |
| ```               |                                   |
+-------------------+-----------------------------------+

```{=html}
<style type="text/css">
.heading-output {
  border-bottom: none;
  margin-top: 0;
  margin-bottom: 0;
}
</style>
```


## Links e Imágenes {.small}

+--------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+
| Markdown Syntax                                                          | Output                                                                                                              |
+==========================================================================+=====================================================================================================================+
| ``` markdown                                                             | <https://quarto.org>                                                                                                |
| <https://quarto.org>                                                     |                                                                                                                     |
| ```                                                                      |                                                                                                                     |
+--------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+
| ``` markdown                                                             | [Quarto](https://quarto.org)                                                                                        |
| [Quarto](https://quarto.org)                                             |                                                                                                                     |
| ```                                                                      |                                                                                                                     |
+--------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+
| ``` markdown                                                             | ![Caption](images/JIE_logo.png){width="20%" fig-alt="Logo USM"}                                                  |
| ![Caption](images/JIE_logo.png)                                       |                                                                                                                     |
| ```                                                                      |                                                                                                                     |
+--------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+
| ``` markdown                                                             | [![Caption](images/JIE_logo.png){width="20%"}](https://quarto.org)                                               |
| [![Caption](images/JIE_logo.png)](https://quarto.org)                 |                                                                                                                     |
| ```                                                                      |                                                                                                                     |
+--------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+
| ``` markdown                                                             | [![Caption](images/JIE_logo.png "JIE-2024"){width="20%" fig-alt="JIE-2024"}](https://quarto.org)          |
| [![Caption](images/JIE_logo.png)](https://quarto.org "JIE-2024")      |                                                                                                                     |
| ```                                                                      |                                                                                                                     |
+--------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+
| ``` markdown                                                             | [![](images/JIE_logo.png){width="20%" fig-alt="Alt text."}](https://jornadas-estadistica.github.io/)                                  |
| [![](images/JIE_logo.png){fig-alt="Alt text"}](https://jornadas-estadistica.github.io/)    |                                                                                                                     |
| ```                                                                      |                                                                                                                     |
+--------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------+



## Listas {.small}

+-----------------------------------+--------------------------------+
| Sintáxis Markdown                 | Salida                         |
+===================================+================================+
| ``` markdown                      | -   Lista no ordenada          |
| * Lista no ordenada               |     -   sub-item 1             |
|     + sub-item 1                  |     -   sub-item 2             |
|     + sub-item 2                  |         -   sub-sub-item 1     |
|         - sub-sub-item 1          |                                |
| ```                               |                                |
+-----------------------------------+--------------------------------+
| ``` markdown                      | -   item 2                     |
| *   item 2                        |                                |
|                                   |     Continuación (4 spaces)    |
|     Continuación (4 spaces)       |                                |
| ```                               |                                |
+-----------------------------------+--------------------------------+
| ``` markdown                      | 1.  Lista ordenada             |
| 1. Lista ordenada                 | 2.  item 2                     |
| 2. item 2                         |     i)  sub-item 1             |
|     i) sub-item 1                 |         A.  sub-sub-item 1     |
|          A.  sub-sub-item 1       |                                |
| ```                               |                                |
+-----------------------------------+--------------------------------+

## Listas

+-----------------------------------+--------------------------------+
| ``` markdown                      | (1) Una lista cuyos números    |
| (@)  Una lista cuyos números      |                                |
|                                   | continuan después              |
| continuan después                 |                                |
|                                   | (2)  de una interrupción       |
| (@)  de una interrupción          |                                |
| ```                               |                                |
+-----------------------------------+--------------------------------+
| ``` markdown                      | <div>                          |
| ::: {}                            |                                |
| 1. Una lista                      | 1.  Una lista                  |
| :::                               |                                |
|                                   | </div>                         |
| ::: {}                            |                                |
| 1. Seguida de otra lista          | <div>                          |
| :::                               |                                |
| ```                               | 1.  Seguida de otra lista      |
|                                   |                                |
|                                   | </div>                         |
+-----------------------------------+--------------------------------+
| ``` markdown                      | término                        |
| término                           |                                |
| : definición                      | :   definición                 |
| ```                               |                                |
+-----------------------------------+--------------------------------+


## Tablas

#### Sintáxis Markdown

``` markdown
| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|   12  |  12  |    12   |    12  |
|  123  |  123 |   123   |   123  |
|    1  |    1 |     1   |     1  |
```

#### Output

| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|    12 | 12   | 12      |   12   |
|   123 | 123  | 123     |  123   |
|     1 | 1    | 1       |   1    |

## Código de fuente

Usamos ```` ``` ```` para delimitar bloques de código:

```` markdown
```
código
```
````

Podemos agregar un lenguaje para destacar el código:

```` markdown
```python
1 + 1
```
````
**Pandoc** ofrece 140 distintos lenguajes para destacar código.

## Guía de referencia

Para una lista exhaustiva de las opciones de formato que tienen los documentos `.qmd` visitar [https://quarto.org/docs/guide/](https://quarto.org/docs/guide/).

## Formatos de salida: Documentos

Los formatos de salida más utilizados para **documentos** creados con `Quarto` son:

- [`HTML`](https://quarto.org/docs/reference/formats/html.html)
- [`PDF`](https://quarto.org/docs/reference/formats/pdf.html)
- [`DOCX`](https://quarto.org/docs/reference/formats/docx.html)

. . .

Para cambiar entre estos formatos, basta especificiar la salida deseada en el `YAML`. Otros formatos posibles:

- [`OpenOffice`](https://quarto.org/docs/reference/formats/odt.html)
- [`ePub`](https://quarto.org/docs/reference/formats/epub.html)

## Formatos de salida: Presentaciones

En Quarto tenemos 3 opciones para presentaciones:

- [`RevealJS`](https://quarto.org/docs/reference/formats/presentations/revealjs.html)
- [`PowerPoint`](https://quarto.org/docs/reference/formats/presentations/pptx.html)
- [`Beamer`](https://quarto.org/docs/reference/formats/presentations/beamer.html)

En donde `RevealJS` es el formato que nos entrega más herramientas. (Esta presentación fue hecha utilizando `RevealJS` en `Quarto`)

## Caso práctico

::: box3
Crearemos un mismo documento en distintos formatos
:::

[Awesome Quarto](https://github.com/mcanouil/awesome-quarto)



# Templates

## Este tutorial

Este tutorial usa un template llamado clean. Está disponible en un repositorio en [GitHub](https://github.com/grantmcdermott/quarto-revealjs-clean).

# Other stuff

## Example slide

### This is a subtitle

Before we dive a bit deeper, here is a simple example of the
[clean theme](https://github.com/grantmcdermott/quarto-revealjs-clean)
in action. 

- No pictures or anything fancy. Just text for the moment.

Next, we'll take a brief tour of some theme components.

- We'll use the same basic
structure as the
[original LaTeX slides](https://raw.githack.com/kylebutts/templates/master/latex-slides/auxiliary/slides.pdf).
- Note that the [_full suite_](https://quarto.org/docs/presentations/revealjs/)
of Reveal.js features are available for this Quarto implementation,
even if we don't cover everything here.


## Before you proceed...

### Requirements for the coding examples in this demo

The [clean theme](https://github.com/grantmcdermott/quarto-revealjs-clean) is
language agnostic. Use it with R, Python, Julia, etc. Or none of the above.

However, this demo uses R code to highlight advanced theme features.
You'll need to install some software if you'd like to render the demo "as-is".

:::{.callout-warning}

## Required software (this demo only)

### R packages

```{.r}
install.packages(c("modelsummary", "fixest", "pdftools", "tinytex", "threejs"))
```
### TinyTex

```{.bash}
quarto install tinytex
```
While reveal.js presentations are HTML format, we will show an example of how to 
embed LaTeX tables as images. This requires a working Tex distribution, of which
TinyTex provides by far the easiest and lightest integration with Quarto. More
details [here](https://quarto.org/docs/output-formats/pdf-engine.html).

:::


# Components {background-color="#40666e"}

## Components

### Ordered and Unordered Lists

Here we have an unordered list.

- first item
    - sub-item
- second item

And next we have an ordered one.

1. first item
    i) sub-item
2. second item

## Components

### Alerts & Cross-refs {#sec-crossref}

To emphasize specific words or text, you can:

- Use the default `.alert` class, e.g. [important note]{.alert}.
- Use the `.fg` class for custom colour, e.g. [important note]{.fg style="--col: #e64173"}.
- Use the `.bg` class for custom background, e.g. [important note]{.bg style="--col: #e64173"}.

To cross-reference, you have several options, for example:

- Beamer-like `.button` class provided by this theme, e.g. [[Appendix]{.button}](#sec-appendix)
- Quarto's native cross-ref syntax, e.g., "See @sec-appendix."

## Components

### Citations

Citations follow the standard
[Quarto format](https://quarto.org/docs/authoring/footnotes-and-citations.html#citations)
and be sourced from BibLaTex, BibTeX, or CLS files. For example:

 - [Topic 1:]{.alert} Spatial Frictions [@Fajgelbaum_Morales_Serrato_Zidar_2018; @Hsieh_Moretti_2019; @Moretti_2011]

- [Topic 2:]{.alert} Blah [@Suárez_Serrato_Zidar_2016]

## Components

### Blocks

Quarto provides
[dedicated environments](https://quarto.org/docs/authoring/cross-references.html#theorems-and-proofs)
for theorems, lemmas, and so forth. 

But in presentation format, it's arguably more effective just to use a
[Callout Block](https://quarto.org/docs/authoring/callouts.html).

:::{.callout-note}
## Regression Specification

The main specification is as follows:

$$
y_{it} = X_{it} \beta + \mu_i + \varepsilon_{it}
$$
:::

## Components

### Multicolumn I: Text only

:::: {.columns}

::: {.column width="50%"}
#### Column 1

Here is a long sentence that will wrap onto the next line as it hits the column
width, and continue this way until it stops.
:::

::: {.column width="50%"}
#### Column 2

Some other text in another column.

A second paragraph.
:::

::::

Multicolumn support is very flexible and we can continue with a single full
span column in the same slide.

## Components

### Multicolumn II: Text and figures

:::: {.columns}

::: {.column width="50%"}
![](images/kanagawa.jpg)
:::

::: {.column width="50%"}

- A point about the figure that is potentially important.
- Another point about the figure that is also potentially important.
:::

::::

Note that sub- and multi-panel figures are also natively supported by Quarto.
See [here](https://quarto.org/docs/authoring/figures.html#subfigures).

## Components

### Multicolumn III: Code and output

```{r}
#| echo: true
#| label: fig-pairs
#| fig-cap: "Pairwise scatterplot" 
#| fig-asp: 1
#| output-location: column

palette("Classic Tableau")

par(
  family = "HersheySans",
  las = 1, pch = 19, cex = 1.5
)

pairs(
  iris[,1:4],
  col=iris$Species
)
```

# Tables {background-color="#40666e"}

## Markdown tables

### Default table styling

The `clean` theme rolls its own minimalist aesthetic for tables. This should interface directly with Quarto's excellent
[table support](https://quarto.org/docs/authoring/tables.html).

:::: {.columns}
::: {.column width="55%"}

```md
| fruit  | price  |
|--------|-------:|
| apple  | 2.05   |
| pear   | 1.37   |
| orange | 3.09   |

: Fruit prices {tbl-colwidths="[75,25]"}
```

:::
::: {.column width="5%"}
:::
::: {.column width="40%"}
| fruit  | price  |
|--------|-------:|
| apple  | 2.05   |
| pear   | 1.37   |
| orange | 3.09   |

: Fruit prices {tbl-colwidths="[75,25]"}

:::

::::


## Regression tables

### Regression example

These aesthetics should carry over to any computation-based tables too.

Let's take a few slides to illustrate via a simple regression example:

```{r}
#| echo: true

library(fixest)

mods = feols(
  rating ~ complaints + privileges + learning + csw0(raises + critical),
  data = attitude
)

dict = c("rating"     = "Overall Rating",
         "complaints" = "Handling of Complaints",
         "privileges" = "No Special Priviledges",
         "learning"   = "Opportunity to Learn",
         "raises"     = "Performance-Based Raises",
         "critical"   = "Too Critical")
```

## Regression tables

### modelsummary

Popular regression table software should play nicely with this theme out of the
box. Here's an example using [modelsummary](https://modelsummary.com/) (with the
default [tinytable](https://vincentarelbundock.github.io/tinytable/)
backend^[For extra styling options (e.g., bootstrap themes), see
[here](https://modelsummary.com/vignettes/appearance.html).]). See the next
slide for the resulting table.

```{r}
#| echo: true
#| output-location: slide

library(modelsummary) # Make sure you have >=v2.0.0

modelsummary(
  setNames(mods, c("(1)", "(2)")),
  coef_map = dict, stars = TRUE,
  gof_map = NA
  ) |>
  # some optional stylistic tweaks
  tinytable::group_tt(j = list("Dep. variable: Overall Rating" = 2:3)) |>
  tinytable::style_tt(i = 1:2, j = 2:3, background = "pink")
```


## Regression tables

### fixest::etable

**Aside:** We used the fantastic [fixest](https://lrberge.github.io/fixest/) package to estimate our regression models. fixest bundles its own powerful tabling functions. These were designed for LaTeX output, but can work with this (HTML) theme too.^[Details
[here](https://lrberge.github.io/fixest/articles/etable_new_features.html). You need to install the `tinytex` & `pdftools` packages first.]

- Set the `output: asis` R chunk option in your Quarto doc.
- Set the `markdown = TRUE` fixest::etable option.

````
```{{r}}
#| output: asis

setFixest_etable(markdown = TRUE, drop = "Constant")
setFixest_dict(dict)

etable(mods, highlight = .("se" = "complaints"))
```
````

## Regression tables

### fixest::etable (cont.)

```{r}
#| output: asis

setFixest_etable(markdown = TRUE, drop = "Constant")
setFixest_dict(dict)

etable(mods, highlight = .("se" = "complaints"), arraystretch = 1.5)
```

# Figures {background-color="#40666e"}

## Figure

![](images/kanagawa.jpg)

## Figure

### Full-size Figures

You can use the `{.background-image}` container environment to completely fill
the slide background with an image.

Ideally, your figure will be the same aspect ratio as the screen that you're presenting on.

- This can be a bit tricky because of the dynamic nature of reveal.js / HTML. But it's probably something close to 16:9.
- Aspect ratio can also matter for a regular full-frame images (previous slide).

## {background-image="images/kanagawa169.jpg" background-size="100%"}

## Interactive plots

```{r}
#| out-width: 75%

library(threejs)

# Approximate locations as factors
data(flights)
dest = factor(sprintf("%.2f:%.2f", flights[,3], flights[,4]))

# A table of destination frequencies
freq = sort(table(dest), decreasing=TRUE)

# The most frequent destinations in these data
frequent_destinations = names(freq)[1:10]

# Subset the flight data by destination frequency
idx = dest %in% frequent_destinations
frequent_flights = flights[idx, ]

# Lat/long and counts of frequent flights
ll = unique(frequent_flights[, 3:4])

# Plot frequent destinations as bars, and the flights to and from
# them as arcs. Adjust arc width and color by frequency.
globejs(lat=ll[, 1], long=ll[, 2], arcs=frequent_flights,
        # bodycolor="#aaaaff", arcsHeight=0.3, arcsLwd=2,
        bodycolor="#fff", arcsHeight=0.3, arcsLwd=2,
        arcsColor="#ffff00", arcsOpacity=0.15,
        atmosphere=TRUE, color="#fff", pointsize=0.5)
```

_Note: Simple flight data example using `threejs`. There are many interactive
plotting options beyond this.
(More [details](https://quarto.org/docs/interactive/).)_

# Other {background-color="#40666e"}

## Other

### What else can the clean theme do?

We have highlighted some theme-specific components in this demo.

But please note that all of the standard
[reveal.js functionality and plugins](https://quarto.org/docs/presentations/revealjs/presenting.html)
are compatible with the clean theme. This includes:

- [chalkboard](https://quarto.org/docs/presentations/revealjs/presenting.html#chalkboard) for annotating slides.
- [multiplex](https://quarto.org/docs/presentations/revealjs/presenting.html#multiplex) for enabling audience navigation of your slides.
- [pdf printing](https://quarto.org/docs/presentations/revealjs/presenting.html#print-to-pdf) in case you don't have access to a web browser.
- Etc.

# Summary {background-color="#40666e"}

## Summary

### A minimalist and elegant presentation theme


The Quarto reveal.js [clean theme](grantmcdermott/quarto-revealjs-clean) aims to
be a minimalist and elegant presention theme. Here are some options to get you
started.

Add the theme to an existing project.

```{.bash}
quarto install extension grantmcdermott/quarto-revealjs-clean
```

... or, create a new project using our lean template.

```{.bash}
quarto use template grantmcdermott/quarto-revealjs-clean
```

... or, create a new project using these demo slides as a full template.

```{.bash}
quarto use template grantmcdermott/quarto-revealjs-clean-demo
```



## References

::: {#refs}
:::

## Appendix {#sec-appendix}

```{r}
#| cache: true
#| label: tbl-attsum
#| tbl-cap: Summary of the base R `attitude` dataset

library(modelsummary)
datasummary_skim(attitude)
```

[[Back to main]{.button}](#sec-crossref)
